[{"categories":["posts"],"content":"在编写搭建个人博客网站时曾遇到这样一个问题：将图片文件存储在本地时没有任何问题，可以正常打开，网站也可以正常渲染，然而当通过 git 上传到 github 之后，部署到 github page 后图片却无法正常渲染。经过原因调查发现在 github 仓库中对应的图片文件无法正常打开，下载后 Linux 环境也无法正常打开。\n进一步查阅发现是 git config 配置的问题~~(虽然问题解决后也没能成功渲染)~~，由于以前没有详细研究关于 git 的设置，一怒之下查询了相关的资料整理了一下。\nGit 配置综述 层级结构 Git 的配置有层级之分，共有三层，类似局部变量与全局变量的关系，更高的层级有更低的优先级：\n系统级（–system）：对整个操作系统上的所有用户生效。配置文件通常在 /etc/gitconfig。 全局级（–global）：对当前用户生效。配置文件在 ~/.gitconfig 或 Windows 的 C:\\Users\u003c用户名\u003e\\.gitconfig。 仓库级（默认）：只对当前 Git 仓库生效。配置文件在仓库的 .git/config。 语法规则 这些配置项的语法规则类似结构体遵循\u003csection\u003e.\u003ckey\u003e。其中 section 时区块名，比如 core, user, branch…\n查看设置 这些配置文件默认状态下均是隐藏的，在 Linux 下以位于 . 开头的 .git 中，ls 带参数 -a 即可查看。\n对于一个特定项目，可以运行git config --list --show-origin命令，一是显示当前项目的所有配置，二是显示这些配置的来源文件。\n需要查看某一项具体配置，直接运行命令git config ***即可。\n比如本博客项目的仓库 git 配置如下：\n1 2 3 4 5 6 7 8 9 10 11 [core] repositoryformatversion = 0 filemode = true // git 会跟踪文件的可执行权限 bare = false // 是否为裸仓库，即没有工作区，常用于远程仓库 logallrefupdates = true // git 会为所有引用保留日志，在 .git/logs/ 中 [remote \"origin\"] url = git@github.com:Hspikes/blog_Hspikes.git fetch = +refs/heads/*:refs/remotes/origin/* // 在 fetch 时将远程仓库所有分支都同步到本地 [branch \"main\"] remote = origin merge = refs/heads/main 全局配置只有在你第一次设置了--global配置后才会自动生成。至于全局的配置如下：\n1 2 3 4 5 6 [user] email = ***@*** name = Hspikes [core] editor = vim autocrlf = false 可以看到全局配置基本上只约束了用户名邮箱地址、信息默认编辑器之类的，至于那个 autocrlf 我们下文会讲到。\n本项目 git 没有系统级别的配置，通常系统级均是关于服务器多人协作、企业模版等场景下运用，个人的电脑上往往都不会进行系统级设置。\n常见配置 这里的常见配置自然不包括 username, email… 一类的易懂的配置，而是总结一些较难理解却容易出错的配置。\ncore.autocrlf 显然根据区块名称这属于核心配置，auto 自动处理某些问题，crlf 代表换行相关的处理。控制的是 Git 在提交和检出文件时，是否自动转换换行符。\n一个人尽皆知的问题是不同系统的换行符不一样，Windows → CRLF (\\r\\n), Linux/macOS → LF (\\n)。Git 为了避免“同一文件在不同系统上显示换行不一致”，提供了这个自动转换机制。\n这个设置共有三种模式:\ntrue: 提交时：Git 会把 CRLF → LF(保证仓库里都是 LF)；检出时：Git 会把 LF → CRLF。 input: 提交时：Git 会把 CRLF → LF；检出时：不做转换(保持仓库里的 LF)。 false: Git 不做任何转换，提交和检出都保持原样。 我所遇到的问题便是 autocrlf 设置为 true 并且 git 提交时错误的把本属于二进制文件的图片文件 png 识别为了文本文件，导致图片文件内容被损坏。\n最合适的做法是在 .gitattributes 中声明哪些是二进制文件，比如：\n1 2 3 *.png binary *.jpg binary *.pdf binary 我这里由于开发环境，直接偷了懒，更改了全局设置，等以后出问题时再来清算吧😋\npull.rebase pull 的默认方式是 fetch + merge，若 pull.rebase = true，则默认方式为 fetch + rebase。前者会保留分支的分流历史，后者会合并两者而不保留分流历史。\n","description":"","tags":null,"title":"git-config: 关于 git 设置的一些问题","uri":"/blog_Hspikes/posts/technology/git-config/"},{"categories":["posts"],"content":"如题，总之就是各种茶，尝试复制一些奶茶店的味道🙃 (但0.5分糖)\n珍珠奶茶 ","description":"","tags":null,"title":"总之就是各种茶","uri":"/blog_Hspikes/posts/spike%E5%AE%B6%E4%BB%8A%E5%A4%A9%E5%90%83%E4%BB%80%E4%B9%88/%E6%80%BB%E4%B9%8B%E5%B0%B1%E6%98%AF%E5%90%84%E7%A7%8D%E8%8C%B6/"},{"categories":["posts"],"content":"","description":"","tags":null,"title":"希腊棺材之谜","uri":"/blog_Hspikes/posts/whodunit/%E5%B8%8C%E8%85%8A%E6%A3%BA%E6%9D%90%E4%B9%8B%E8%B0%9C/"},{"categories":["posts"],"content":"以前老师告诉过我科研难点不仅仅在于解决问题，更在于找到问题。这对推理小说也是同理，只要找到了惯用手的角度切入思考，配合两个追查者状态的变化答案就很显然，但难点在于找到这个角度。\n最后解密时一个核心是玫瑰花纹的垃圾桶，但里面是空的，一般没读到最后很难注意到这个东西，只能后来再找，看到这大家的反映应该都一样去哥哥调查案发现场那一段找垃圾桶，但那个时候也是空的，那肯定就是中间某人丢了东西进去。如果有电子版 PDF 直接搜索玫瑰花纹一下就能定位，可惜是纸质的。\n至于案件本身两人都想行凶在现场相遇这个设定颇具想象力，可惜不是核心诡计。中途润一的不在场证明过于简陋，可以说攻破的方法不计其数，而且提到数码相机后正确答案也十拿九稳，实在称不上诡计。东野的诡计质量确实不太行。\n佳世子试图作为模仿犯连现场有泥土都知道，这设定太不合理，这种连环杀人细节都不应当纰漏就是为了防止模仿犯，警方失职太严重了😅\n","description":"","tags":null,"title":"谁杀了她","uri":"/blog_Hspikes/posts/whodunit/%E8%B0%81%E6%9D%80%E4%BA%86%E5%A5%B9/"},{"categories":["posts"],"content":"本文的内容主要参考网站 Markdown教程，记下一些自己常用常忘的语法。\n空格 文字段落内空格 $~~~$，这里是 $~~~$ 效果。\n制表 | Syntax | Description | Test Text | | :--- | :----: | ---: | | Header | Title | Here's this | | Paragraph | Text | And more | Syntax Description Test Text Header Title Here’s this Paragraph Text And more 一个简易的表格示意，第二行指定了对齐方式。\nEmoji 直接从 Emojipedia 中复制粘贴就好了。下面粘贴一些我用过的表情。类我就不分了，应该用不了几种。\n⭐🥰😅🙃😋\n","description":"","tags":null,"title":"Markdown语法","uri":"/blog_Hspikes/posts/technology/markdown/"},{"categories":["posts"],"content":"因为从 7 月中才开始写新番杂记，所以这个季度的杂谈不包含前一两话吧。不过话又说回来这个季度看的不太多。\n追番进度表 名称 进度 当前评价 恋人不行 第七话 ⭐⭐⭐⭐⭐ 一如既往的有趣 小城日常 第六话 ⭐⭐$~~~~~~~~~~~~$ 看睡着了 这届侦探不太行 第八话 ⭐⭐⭐$~~~~~~~~$ 远不如前几话，有关推理侦探的梗很少，失去了核心看点 琉璃的宝石 第七话 ⭐⭐⭐⭐⭐ 这话真的无敌，整体节奏非常舒适，看到中间讲薄膜反射时会心一笑，涨知识了。 完结杂谈 评价留档 恋人不行 第三话 ⭐⭐⭐⭐⭐ 非常有趣，周指活。但怎么感觉这一话没有之前富呢？穷穷的。 第四话 ⭐⭐⭐⭐⭐ 屑粉毛也是出手了，太爱紫阳花了 第五话 ⭐⭐⭐⭐⭐ 全程笑容没停下来过 第六话 ⭐⭐⭐⭐⭐ 纱月也太可爱了吧，王总：我很忠诚，我的妻子也很幸福 第七话 ⭐⭐⭐⭐⭐ 一如既往的有趣 小城日常 第二话 ⭐⭐⭐⭐$~~~~$ 感觉风评不是很行，但我的观感还是很好的🥰 第三话 ⭐⭐⭐$~~~~~~~~$ 开场笑话没有太 get，整体节奏不太抓得住注意力 第四话 ⭐⭐⭐⭐$~~~~$ call back 很有趣 第五话 ⭐⭐$~~~~~~~~~~~~$ 想法挺有意思的，但实在不太好看，ed 风格挺特别的 第六话 ⭐⭐$~~~~~~~~~~~~$ 看睡着了 这届侦探不太行 第五话 ⭐⭐⭐⭐⭐ 对侦探小说爱好者来说很好笑，很多会心一笑的梗 第六话 ⭐⭐⭐⭐⭐ 全程笑不停，甚至还有 call back，无敌了 第七话 ⭐⭐⭐$~~~~~~~~$ 比较无趣，几个笑点都很一般，失去了先前推理迷笑点特色 第八话 ⭐⭐⭐$~~~~~~~~$ 远不如前几话，有关推理侦探的梗很少，失去了核心看点 琉璃的宝石 第四话 ⭐⭐⭐$~~~~~~~~$ 制作很好，女主有点熊孩子看得我血压高 第五话 ⭐⭐⭐⭐$~~~~$ 愿意写这种成长型人设的真不多了，我也想要挂我二作的学姐 第六话 ⭐⭐⭐⭐⭐ 渐入佳境，看到女主调查犯错那一段感觉太恐怖了 第七话 ⭐⭐⭐⭐⭐ 这话真的无敌，整体节奏非常舒适，看到中间讲薄膜反射时会心一笑，涨知识了。 ","description":"","tags":null,"title":"2025.7新番杂记","uri":"/blog_Hspikes/posts/animation/%E6%96%B0%E7%95%AA%E6%9D%82%E8%AE%B0/2025.7/"},{"categories":["posts"],"content":"","description":"","tags":null,"title":"玫瑰的名字","uri":"/blog_Hspikes/posts/whodunit/%E7%8E%AB%E7%91%B0%E7%9A%84%E5%90%8D%E5%AD%97/"},{"categories":["posts"],"content":"This blog is to test whether the blog site is working properly.\n世人都晓神仙好，只是功名忘不来！\n古今将相今何在，荒冢一堆草没了。\n世人都晓神仙好，只是金钱忘不了！\n终朝只恨聚无多，即到多时眼闭了。\n中文字体也正常。\n1 printf(\"Hello world!\"); 但我更喜欢 cout\u003c\u003c\"Hello world!\";\n代码块也正常。\n插入图测试：\nseem to be all right?\n","description":"","tags":null,"title":"Hello World: 一些基本功能测试","uri":"/blog_Hspikes/posts/zothers/hello-world/"},{"categories":["posts"],"content":"This blog is to test whether the blog site is working properly.\nWhen n is a positive interger, $\\Gamma(n+1)=n!$, and\n$$ B(p,q)=\\frac{\\Gamma(p+q)}{\\Gamma(p)\\Gamma(q)} $$\nseem to be all right?\n","description":"","tags":null,"title":"Math Test: 数学公式书写测试","uri":"/blog_Hspikes/posts/math/hello-world/"}]
